name: 'Terraform'

on:
  workflow_dispatch:
    inputs:
      terraform:
        description: 'Terraform Operation'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        default: 'production'
        type: environment
        required: true

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Create Config
      uses: ajeffowens/jinja2-action@90dab3da2215932ea86d2875224f06bbd6798617
      with:
        template: provider.tf.j2
        output_file: provider.tf
        variables: |
          terraform_state_bucket=${{ secrets.terraform_state_bucket }}
          terraform_state_key=${{ secrets.terraform_state_key }}
        
    - name: AWS credentials
      id: root_creds
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.oidc_role }}
        aws-region: us-west-2
        output-credentials: true
        
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: Terraform Init
      run: terraform init

    - name: Terraform Format
      run: terraform fmt -check

    - name: Terraform Plan
      run: terraform plan -input=false

    - name: Terraform Apply
      if: github.ref == 'refs/heads/"main"' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
